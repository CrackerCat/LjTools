#ifndef __LUA_SYNTREE__
#define __LUA_SYNTREE__
// This file was automatically generated by EbnfStudio; don't modify it!

#include <LjTools/LuaTokenType.h>
#include <LjTools/LuaToken.h>
#include <QList>

namespace Lua {

	struct SynTree {
		enum ParserRule {
			R_First = TT_Max + 1,
			R_Lua,
			R_args,
			R_assigOrCall_,
			R_assignment_,
			R_binop,
			R_block,
			R_call_,
			R_chunk,
			R_comment_,
			R_desig_,
			R_dostat_,
			R_exp,
			R_explist,
			R_field,
			R_fieldlist,
			R_fieldsep,
			R_forstat_,
			R_funcbody,
			R_funcname,
			R_functioncall_,
			R_gfuncdecl_,
			R_ifstat_,
			R_index_,
			R_lambdecl_,
			R_laststat,
			R_lfuncdecl_,
			R_localdecl_,
			R_lvardecl_,
			R_namelist,
			R_parlist,
			R_prefixexp,
			R_repeatstat_,
			R_stat,
			R_tableconstructor,
			R_unop,
			R_var_,
			R_varlist_,
			R_whilestat_,
			R_Last
		};
		SynTree(quint16 r = Tok_Invalid, const Token& = Token() );
		SynTree(const Token& t ):d_tok(t){}
		~SynTree() { foreach(SynTree* n, d_children) delete n; }

		static const char* rToStr( quint16 r );

		Lua::Token d_tok;
		QList<SynTree*> d_children;
	};

}
#endif // __LUA_SYNTREE__
